version: '3.8'  
services:

  api:
    build: 
      context: .
      dockerfile: Dockerfile.node
    container_name: api_node
    entrypoint: sh -c "npm install && npm run start:dev"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - .:/home/node/app
      - /home/node/app/node-modules
    ports:
      - ${PORT}:${PORT}
    networks:
      - webnet
    depends_on:
      - db
      - redis

  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: api_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PGDATA: ${PGDATA}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - webnet

  nginx:
    build: 
      context: .
      dockerfile: Dockerfile.nginx
    container_name: api_nginx
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    networks:
      - webnet
  
  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    hostname: ${HOST_REDIS}
    ports:
      - ${PORT_REDIS}:${PORT_REDIS}
    networks:
      - webnet

volumes:
  db_data:

networks:
  webnet: